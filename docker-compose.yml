version: "3.7"

networks:
  frontend:
  backend:

services:

  webmvc:
    build:
      context: .\src\Web\WebMvc
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=ContainerDev
      - CatalogUrl=http://catalog
      - IdentityUrl=http://10.0.75.2:5600
    container_name: webfront
    ports:
      - "5500:80"
    networks:
      - frontend
    depends_on:
      - catalog
      - tokenserver
 
  catalog:
    build:
      context: .\src\Services\ProductCatalogApi
      dockerfile: Dockerfile
    image: shoes/catalog
    environment:
      - DatabaseServer=mssqlserver
      - DatabaseName=CatalogDb
      - DatabaseUser=sa
      - DatabasePassword=ProductApi1!@
    container_name: catalogapi
    ports:
      - "5000:80"

    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  cart:
    image: cartimage
    build: 
      context: .\src\Services\CartApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://10.0.75.2:5600
    container_name: cartapi
    ports:
      - "5700:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - basket.data
      - tokenserver

  basket.data:
    image: redis
    ports:
      - "6377:6379"
    networks:
      - backend

  tokenserver:
    build:
      context: .\src\Services\TokenServiceApi
      dockerfile: Dockerfile
    image: shoes/token-service
    environment:
      - ASPNETCORE_ENVIRONMENT=ContainerDev
      - MvcClient=http://localhost:5500
    container_name: tokenserviceapi
    ports:
      - "5600:80"

    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports: 
      - "1445:1433"

    container_name: mssqlcontainer
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=ProductApi1!@
    networks:
      - backend